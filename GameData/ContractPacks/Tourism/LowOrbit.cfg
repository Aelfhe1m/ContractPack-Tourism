// Contract for sending tourists to low orbit.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_LowOrbit
    group = Tourism

    title = Tourism: @/SpawnPassengers/count.Print() tourists to low @targetBody orbit
    description = More tourists want to go to space.  Give them an orbit or two around @targetBody - an hour should do it.
    synopsis = Bring @/SpawnPassengers/count.Print() tourists to orbit of @targetBody orbit for one hour.
    completedMessage = The tourists had a great time!

    // Level 1 prestige
    prestige = Trivial

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Can only have two at a time
    maxSimultaneous = 2

    // Contract rewards
    rewardFunds = 25000.0 * @/SpawnPassengers/count + Random(0.0, 10000.0)
    rewardReputation = 1.0
    failureReputation = 20.0

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Bring the tourists into orbit

        duration = 1h

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = Orbit
            type = Orbit

            minPeA = @/targetBody.AtmosphereAltitude() + 5000
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = Random(2, 5)
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @/SpawnPassengers/count
            TouristLowOrbitCount = TouristLowOrbitCount + @/SpawnPassengers/count
        }
    }

    REQUIREMENT
    {
        name = AnyStarter
        type = Any

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract

            contractType = TourismContract
        }

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract

            contractType = Tourism_FirstTourist
        }
    }
}
