// Contract for sending tourists to low orbit.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_Attraction
    group = Tourism

    title = Tourism Plus: @Tourism:touristCount.Print() @Tourism:tourists to @targetVessel
    description = Tourists are flocking to see our attraction!
    synopsis = Bring @Tourism:touristCount.Print() @Tourism:tourists to @targetVessel.
    completedMessage = The @Tourism:tourists are on board!

    // Level 2 prestige
    prestige = Significant

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Only one at a time
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = TouristAttractionModifier * (30000.0 * @Tourism:touristCount + Random(0.0, 10000.0))
    rewardReputation = 1.0
    failureReputation = 20.0

    DATA
    {
        type = Vessel

        // Filter the list down to whichever of the two was actually built
        targetVessel = [ Space Casino, Space Hotel ].Where(v => v.IsOrbiting()).Random()
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        vessel = @/targetVessel

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = Random(10, Min(40, Max(@/targetVessel.EmptyCrewSpace(), 1)))
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @Tourism:touristCount
            TouristAttractionCount = TouristAttractionCount + @Tourism:touristCount
        }
    }

    REQUIREMENT
    {
        name = SufficientSpace
        type = Expression

        expression = @/targetVessel.EmptyCrewSpace() >= 10
    }
}
