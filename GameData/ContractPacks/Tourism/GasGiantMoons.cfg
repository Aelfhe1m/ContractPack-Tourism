// Contract for sending tourists on a Jool-5 style tour.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_GasGiantMoons
    group = Tourism

    title = Tourism Plus: @targetBody grand tour
    description = A very wealthy tourist would like to do a tour of the moons of @targetBody.  He's willing to pay quite well for the trip.
    synopsis = Fly by all of @targetBody's moons.
    completedMessage = The tourist had a great time!

    // Level 3 prestige
    prestige = Exceptional

    targetBody = AllBodies().Where(b => !b.HasSurface() && b.IsPlanet() && b.Children().Count() > 0).Random()

    agent = Kerbal Space Tourism

    // Only one of these shows up at a time
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = Random(100000.0, 250000.0) + @targetBody.Children().Count() * 100000.0
    rewardReputation = 1.0
    failureReputation = 5.0

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Visit @/targetBody's moons

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(0)
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(1)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 2
            }
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(2)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 3
            }
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(3)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 4
            }
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(4)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 5
            }
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(5)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 6
            }
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(6)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 7
            }
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @targetBody.Radius() / 2.0
            targetBody = @/targetBody.Children().ElementAt(7)

            REQUIREMENT
            {
                name = CheckMoonExists
                type = Expression

                expression = @/targetBody.Children().Count() >= 8
            }
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = 1
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @/SpawnPassengers/count
            TouristGasCount = TouristGasCount + @/SpawnPassengers/count
        }
    }

    REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract

        contractType = Tourism_GasGiantMoons

        minCount = 0
        cooldownDuration = Random(300d, 1y)
    }

    REQUIREMENT
    {
        name = Expression
        type = Expression

        expression = TouristCount > 25
    }
}
