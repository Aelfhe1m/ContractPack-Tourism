// Contract for sending tourists to both moons.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_TwoMoons
    group = Tourism

    title = Tourism: Multi-moon flyby with @/SpawnPassengers/count.Print() tourists
    description = These tourists have booked the delux @targetBody package.  Do a near flyby of @targetBody.Children().First() and @targetBody.Children().Last().
    synopsis = Fly by @targetBody's moons with @/SpawnPassengers/count.Print() tourists.
    completedMessage = The tourists had a great time!

    // Level 3 prestige
    prestige = Exceptional

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Only one of these shows up at a time
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = 20000.0 + 75000.0 * @/SpawnPassengers/count + Random(0.0, 10000.0)
    rewardReputation = 4.0
    failureReputation = 20.0

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Visit both of @/targetBody's moons

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @/targetBody.Children().First().Radius() / 2.0
            targetBody = @/targetBody.Children().First()
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            disableOnStateChange = true

            maxAltitude = @/targetBody.Children().Last().Radius() / 2.0
            targetBody = @/targetBody.Children().Last()
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = Random(2, 5)
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @/SpawnPassengers/count
            TouristMoonsCount = TouristMoonsCount + @/SpawnPassengers/count
        }
    }

    REQUIREMENT
    {
        name = Expression
        type = Expression

        expression = TouristMoonsCount > 0
    }
}
