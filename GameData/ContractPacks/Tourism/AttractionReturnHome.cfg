// Contract for sending tourists to low orbit.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_AttractionReturn
    group = Tourism Plus

    title = Tourism Plus: @/VesselParameterGroup/HasPassengers/count.Print() tourists home from @targetVessel
    description = Some tourists are ending their stay at @targetVessel and need a ride home.
    synopsis = Bring tourists home from @targetVessel.
    completedMessage = The tourists had a great time!

    // Level 1 prestige
    prestige = Trivial

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Only one at a time
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = TouristAttractionModifier * (15000.0 * @/VesselParameterGroup/HasPassengers/count + Random(0.0, 10000.0))
    rewardReputation = 1.0
    failureReputation = 20.0

    DATA
    {
        type = Vessel

        // Filter the list down to whichever of the two was actually built
        targetVessel = [ Space Casino, Space Hotel ].Where(v => v.IsOrbiting()).Random()
    }

    DATA
    {
        type = List<Kerbal>

        // Get me some Kerbals to send home!
        targetKerbals = @targetVessel.Crew().Random(@/VesselParameterGroup/HasPassengers/count)
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Bring some tourists back home

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers

            count = Random(10, Min(50, Max(@/targetVessel.CrewCount(), 1)))
            kerbal = @/targetKerbals
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        kerbal = @/targetKerbals
        completeInSequence = true
    }

    REQUIREMENT
    {
        name = SufficientPassengers
        type = Expression

        expression = @/targetVessel.CrewCount() >= 20
    }
}
